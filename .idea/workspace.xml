<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ef7e38af-70f3-4e30-8f5b-7073cc624343" name="Changes" comment="feat:  commit规范&#10;&#10;添加commit Header、Body、Footer规范">
      <change afterPath="$PROJECT_DIR$/Golang/dataType/interface/02.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Golang/dataType/interface/03.png" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Golang/dataType/interface/04.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Golang/dataType/interface/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/Golang/dataType/interface/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Golang/dataType/interface/img.png" beforeDir="false" afterPath="$PROJECT_DIR$/Golang/dataType/interface/01.png" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/Golang/03 concurrency/03 Data Race/data_race.go" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="22xfv6aIfAbYkQM4mF3O5X2WYZl" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Code/raft&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Go_Code\src\Study-go\leetcode\binaryTree" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Code\Study-go\Golang\dataType\slice" />
      <recent name="D:\Code\Study-go\Golang\计算机网络" />
      <recent name="D:\Go_Code\src\Study-go\IMA\02开发规范\文档规范" />
      <recent name="D:\Go_Code\src\Study-go\IMA\01" />
      <recent name="D:\Go_Code\src\Study-go\Nosql\redis" />
    </key>
  </component>
  <component name="RunManager" selected="Go 构建.go build main.go (1)">
    <configuration name="go build Study-go/test (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stdlib_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="Study-go/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build Study-go/test" type="GoApplicationRunConfiguration" factoryName="Go Application" singleton="false" temporary="true" nameIsGenerated="true">
      <module name="stdlib_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="Study-go/test" />
      <directory value="$PROJECT_DIR$/test" />
      <filePath value="$PROJECT_DIR$/test/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Study-go" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="stdlib_learn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$APPLICATION_CONFIG_DIR$/scratches/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stdlib_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <package value="Study-go" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$APPLICATION_CONFIG_DIR$/scratches/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build stdlib_learn/test" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="stdlib_learn" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="stdlib_learn/test" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/test/main.go" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build main.go (1)" />
      <item itemvalue="Go 构建.go build Study-go/test (1)" />
      <item itemvalue="Go 构建.go build Study-go/test" />
      <item itemvalue="Go 构建.go build main.go" />
      <item itemvalue="Go 构建.go build stdlib_learn/test" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build main.go (1)" />
        <item itemvalue="Go 构建.go build stdlib_learn/test" />
        <item itemvalue="Go 构建.go build Study-go/test" />
        <item itemvalue="Go 构建.go build Study-go/test (1)" />
        <item itemvalue="Go 构建.go build main.go" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Changes" />
    <MESSAGE value="feat:  commit规范&#10;&#10;添加commit Header、Body、Footer规范" />
    <option name="LAST_COMMIT_MESSAGE" value="feat:  commit规范&#10;&#10;添加commit Header、Body、Footer规范" />
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GOPROXY" value="goproxy.cn" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
</project>